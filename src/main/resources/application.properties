# Activity Service identity
spring.application.name=activity-service
server.port=${PORT:8089}

# MySQL (use docker network service name)
spring.datasource.url=jdbc:mysql://localhost:3307/activity_db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.kafka.bootstrap-servers=192.168.99.100:9092
spring.kafka.properties.schema.registry.url=http://192.168.99.100:8085
# Eureka (public URL of Eureka server on Gitpod)
eureka.client.service-url.defaultZone=http://8761-souravjadho-eurekaserve-5uhm254inif.ws-us121.gitpod.io/eureka/

# Validation service (public URL)
validation.service.url=http://8989-souravjadho-validations-e5gjpx2oi3g.ws-us121.gitpod.io/v1/risk/validation

## Kafka
#spring.kafka.bootstrap-servers=broker:29092
#spring.kafka.properties.schema.registry.url=http://schema-registry:8081

# Kafka producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

# Kafka topic
spring.kafka.template.default-topic=postMessageToNewRequestKafkaTopic
spring.kafka.topic.orderPlaced=postMessageToNewRequestKafkaTopic

# Logging for debug
logging.level.org.apache.kafka=DEBUG
logging.level.org.springframework.kafka=DEBUG



#old working code
#spring.application.name=activity-service
#server.port=8089
#
## Swagger OpenAPI config
#springdoc.api-docs.enabled=true
#springdoc.swagger-ui.enabled=true
#
## DB config
#spring.datasource.url=jdbc:mysql://localhost:3306/activity_db
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#
## Eureka
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
## Kafka bootstrap server
#
#spring.kafka.bootstrap-servers=192.168.99.100:9092
#spring.kafka.template.default-topic=postMessageToNewRequestKafkaTopic
#
## Producer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
#
## Schema Registry (required for Avro)
#spring.kafka.properties.schema.registry.url=http://192.168.99.100:8085
#
#spring.kafka.topic.orderPlaced=postMessageToNewRequestKafkaTopic
#
#logging.level.org.apache.kafka=DEBUG
#logging.level.org.springframework.kafka=DEBUG
#
#KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#
#
